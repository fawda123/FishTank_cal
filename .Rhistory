library(SWMPr)
install.package('tidyverse')
install.packages('tidyverse')
library(tidyverse)
install.package('FME')
install.packages('FME')
library(FME)
library(SWMPr)
library(devtools)
install_github('fawda123/WtRegDO')
install.packages('lubridate')
install.packages('read_excel')
install.packages('oce')
install.packages("oce")
library(FME)
library(tidyverse)
library(WtRegDO)
library(lubridate)
library(oce)
install.packages('lubridate')
install.packages("lubridate")
install.packages('tidyverse')
install.packages('ncdf4')
library(ncdf4)
install.packages('dplyr')
library(dplyr)
install.packages('tidyr')
library(lubridate)
source('R/funcs.R')
library(FME)
library(SWMPr)
library(tidyr)
library(dplyr)
library(WtRegDO)
library(lubridate)
library(oce)
library(ncdf4)
##
# calibrating to parameter subsets
rm(list = ls())
source('R/funcs.R')
load(file = 'rdata/tocal_all.RData')
idpars <- get_cmbs(tocal_all, 'O2', coll = FALSE)
source('~/FishTank_cal/R/funcs.R')
idpars <- get_cmbs(tocal_all, 'O2', coll = FALSE)
source('~/FishTank_cal/R/funcs.R')
load(file = 'rdata/tocal_all.RData')
idpars <- get_cmbs(tocal_all, 'O2', coll = FALSE)
idpars
cals <- vector('list', length = length(idpars))
names(cals) <- names(idpars)
names(idpars)
idpar <- names(idpars)
idpar <- names(idpars)[1]
idpar
source('~/FishTank_cal/R/funcs.R')
GEM_InputFile <- formpars('../CGEM/GEM_InputFile')
GEM_InputFile <- formpars('../CGEM/CGEM/GEM_InputFile')
debugSource('~/FishTank_cal/R/funcs.R')
GEM_InputFile <- formpars('ignore/GEM_InputFile')
cats
notparms
notparms
nms
cats
nms
nms
cats
source('~/FishTank_cal/R/funcs.R')
GEM_InputFile <- formpars('ignore/GEM_InputFile')
GEM_InputFile
save(GEM_InputFile, file = 'input/GEM_InputFile.RData')
forminps
InitialConditions <- forminps('data/FishTank/InitialConditions.txt')
debugSource('~/FishTank_cal/R/funcs.R')
InitialConditions <- forminps('data/FishTank/InitialConditions.txt')
InitialConditions <- forminps('data/FishTank/InitialConditions.txt')
parsin
readLines(parsin)
readLines(parsin) %>%
gsub('\t+!|\\s+!', '\t', .) %>% # replace strings inbetween value and variable name with tab
gsub('\\s+$', '', .) %>% # remove trailing spaces
strsplit('\t') %>%
do.call('rbind', .) %>%
data.frame(., stringsAsFactors = FALSE)
readLines(parsin) %>%
gsub('\t+!|\\s+!', '\t', .)
readLines(parsin) %>%
gsub('\t+!|\\s+!', '\t', .) %>% # replace strings inbetween value and variable name with tab
gsub('\\s+$', '', .)
InitialConditions <- forminps('data/FishTank/InitialConditions.txt')
InitialConditions <- forminps('data/FishTank/InitialConditions.txt')
save(InitialConditions, 'input/InitialConditions.Rdata', compress = 'xz')
save(InitialConditions, file = 'input/InitialConditions.Rdata', compress = 'xz')
source('~/FishTank_cal/R/funcs.R')
source('~/FishTank_cal/R/funcs.R')
run_mod()
run_mod()
pars
run_mod()
debugSource('~/FishTank_cal/R/funcs.R')
run_mod()
source('~/FishTank_cal/R/funcs.R')
run_mod()
source('~/FishTank_cal/R/funcs.R')
debugSource('~/FishTank_cal/R/funcs.R')
run_mod()
fl
!file.exists(fl)
source('~/FishTank_cal/R/funcs.R')
run_mod()
source('~/FishTank_cal/R/funcs.R')
run_mod()
source('~/FishTank_cal/R/funcs.R')
run_mod()
debugSource('~/FishTank_cal/R/funcs.R')
run_mod()
p1z1
fl
debugSource('~/FishTank_cal/R/funcs.R')
debugSource('~/FishTank_cal/R/funcs.R')
run_mod()
debugSource('~/FishTank_cal/R/funcs.R')
run_mod()
debugSource('~/FishTank_cal/R/funcs.R')
debugSource('~/FishTank_cal/R/funcs.R')
source('~/FishTank_cal/R/funcs.R')
run_mod()
run_mod()
nc
time
out_ls
out_var
sel
run_mod()
sel
sum(sel)
ov
ncvar_get(nc, ov)
source('~/FishTank_cal/R/funcs.R')
source('~/FishTank_cal/R/funcs.R')
run_mod()
